### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: binop.ml.depends, tags: { extension:ml, file:binop.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules binop.ml > binop.ml.depends # cached
# Target: env.ml.depends, tags: { extension:ml, file:env.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules env.ml > env.ml.depends # cached
# Target: env.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:env.cmo, file:env.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o env.cmo env.ml # cached
# Target: binop.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:binop.cmo, file:binop.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o binop.cmo binop.ml # cached
# Target: bruijnZ.ml.depends, tags: { extension:ml, file:bruijnZ.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules bruijnZ.ml > bruijnZ.ml.depends # cached
# Target: dream.ml.depends, tags: { extension:ml, file:dream.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules dream.ml > dream.ml.depends # cached
# Target: dream.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:dream.cmo, file:dream.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o dream.cmo dream.ml # cached
# Target: expr.ml.depends, tags: { extension:ml, file:expr.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules expr.ml > expr.ml.depends # cached
# Target: errors.ml.depends, tags: { extension:ml, file:errors.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules errors.ml > errors.ml.depends # cached
# Target: errors.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:errors.cmo, file:errors.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o errors.cmo errors.ml # cached
# Target: expr.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:expr.cmo, file:expr.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o expr.cmo expr.ml # cached
# Target: bruijnZ.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:bruijnZ.cmo, file:bruijnZ.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o bruijnZ.cmo bruijnZ.ml # cached
# Target: buildins.ml.depends, tags: { extension:ml, file:buildins.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules buildins.ml > buildins.ml.depends # cached
# Target: buildins.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:buildins.cmo, file:buildins.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o buildins.cmo buildins.ml # cached
# Target: compilZ.ml.depends, tags: { extension:ml, file:compilZ.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules compilZ.ml > compilZ.ml.depends # cached
# Target: dreamZ.ml.depends, tags: { extension:ml, file:dreamZ.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules dreamZ.ml > dreamZ.ml.depends # cached
# Target: isaZ.ml.depends, tags: { extension:ml, file:isaZ.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules isaZ.ml > isaZ.ml.depends # cached
# Target: isaZ.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:isaZ.cmo, file:isaZ.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o isaZ.cmo isaZ.ml # cached
# Target: dreamZ.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:dreamZ.cmo, file:dreamZ.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o dreamZ.cmo dreamZ.ml # cached
# Target: prettyprint.ml.depends, tags: { extension:ml, file:prettyprint.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules prettyprint.ml > prettyprint.ml.depends # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc -v parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o lexer.cmo lexer.ml # cached
# Target: prettyprint.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:prettyprint.cmo, file:prettyprint.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o prettyprint.cmo prettyprint.ml # cached
# Target: compilZ.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:compilZ.cmo, file:compilZ.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o compilZ.cmo compilZ.ml # cached
# Target: inference.ml.depends, tags: { extension:ml, file:inference.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules inference.ml > inference.ml.depends # cached
# Target: inference.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:inference.cmo, file:inference.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o inference.cmo inference.ml # cached
# Target: interpret.ml.depends, tags: { extension:ml, file:interpret.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules interpret.ml > interpret.ml.depends # cached
# Target: interpret.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:interpret.cmo, file:interpret.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o interpret.cmo interpret.ml # cached
# Target: secdZ.ml.depends, tags: { extension:ml, file:secdZ.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules secdZ.ml > secdZ.ml.depends # cached
# Target: secdZ.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:secdZ.cmo, file:secdZ.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o secdZ.cmo secdZ.ml # cached
# Target: transformation_except.ml.depends, tags: { extension:ml, file:transformation_except.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules transformation_except.ml > transformation_except.ml.depends # cached
# Target: transformation_except.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:transformation_except.cmo, file:transformation_except.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o transformation_except.cmo transformation_except.ml # cached
# Target: transformation_ref.ml.depends, tags: { extension:ml, file:transformation_ref.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules transformation_ref.ml > transformation_ref.ml.depends # cached
# Target: transformation_ref.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:transformation_ref.cmo, file:transformation_ref.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o transformation_ref.cmo transformation_ref.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o main.cmo main.ml # cached
# Target: env.cmx, tags: { compile, extension:cmx, extension:ml, file:env.cmx, file:env.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o env.cmx env.ml # cached
# Target: binop.cmx, tags: { compile, extension:cmx, extension:ml, file:binop.cmx, file:binop.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o binop.cmx binop.ml # cached
# Target: dream.cmx, tags: { compile, extension:cmx, extension:ml, file:dream.cmx, file:dream.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o dream.cmx dream.ml # cached
# Target: errors.cmx, tags: { compile, extension:cmx, extension:ml, file:errors.cmx, file:errors.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o errors.cmx errors.ml # cached
# Target: expr.cmx, tags: { compile, extension:cmx, extension:ml, file:expr.cmx, file:expr.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o expr.cmx expr.ml # cached
# Target: bruijnZ.cmx, tags: { compile, extension:cmx, extension:ml, file:bruijnZ.cmx, file:bruijnZ.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o bruijnZ.cmx bruijnZ.ml # cached
# Target: buildins.cmx, tags: { compile, extension:cmx, extension:ml, file:buildins.cmx, file:buildins.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o buildins.cmx buildins.ml # cached
# Target: isaZ.cmx, tags: { compile, extension:cmx, extension:ml, file:isaZ.cmx, file:isaZ.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o isaZ.cmx isaZ.ml # cached
# Target: dreamZ.cmx, tags: { compile, extension:cmx, extension:ml, file:dreamZ.cmx, file:dreamZ.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o dreamZ.cmx dreamZ.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o lexer.cmx lexer.ml # cached
# Target: prettyprint.cmx, tags: { compile, extension:cmx, extension:ml, file:prettyprint.cmx, file:prettyprint.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o prettyprint.cmx prettyprint.ml # cached
# Target: compilZ.cmx, tags: { compile, extension:cmx, extension:ml, file:compilZ.cmx, file:compilZ.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o compilZ.cmx compilZ.ml # cached
# Target: inference.cmx, tags: { compile, extension:cmx, extension:ml, file:inference.cmx, file:inference.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o inference.cmx inference.ml # cached
# Target: interpret.cmx, tags: { compile, extension:cmx, extension:ml, file:interpret.cmx, file:interpret.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o interpret.cmx interpret.ml # cached
# Target: secdZ.cmx, tags: { compile, extension:cmx, extension:ml, file:secdZ.cmx, file:secdZ.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o secdZ.cmx secdZ.ml # cached
# Target: transformation_except.cmx, tags: { compile, extension:cmx, extension:ml, file:transformation_except.cmx, file:transformation_except.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o transformation_except.cmx transformation_except.ml # cached
# Target: transformation_ref.cmx, tags: { compile, extension:cmx, extension:ml, file:transformation_ref.cmx, file:transformation_ref.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o transformation_ref.cmx transformation_ref.ml # cached
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o main.cmx main.ml # cached
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/usr/bin/ocamlopt.opt unix.cmxa env.cmx binop.cmx dream.cmx errors.cmx expr.cmx bruijnZ.cmx buildins.cmx isaZ.cmx dreamZ.cmx parser.cmx lexer.cmx prettyprint.cmx compilZ.cmx inference.cmx interpret.cmx secdZ.cmx transformation_except.cmx transformation_ref.cmx main.cmx -o main.native # cached
# Compilation successful.
